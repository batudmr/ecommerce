// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  phoneNum String
  firstName String
  lastName String

  @@map("users")
}

model Product {
  id Int @id @default(autoincrement())
  name String @db.Char(255)
  slug String @db.Char(255) @unique
  description String? @db.Char(350)
  categoryId Int?
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  productInventory ProductInventory[]
  is_active Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("products")
}

model Category {
  id Int @id @default(autoincrement())
  name String @db.Char(200)
  slug String @db.Char(254) @unique
  is_active Boolean @default(false)
  parentId Int?
  child Category? @relation("NestedCategories")
  parent Category? @relation("NestedCategories", fields: [parentId], references: [id], onDelete: Restrict)
  product Product[]

  @@map("categories")
}

model Brand {
  id Int @id @default(autoincrement())
  name String @unique @db.Char(255)
  productInventory ProductInventory[]
}


model ProductAttribute {
  id Int @id @default(autoincrement())
  name String @db.Char(255) @unique
  description String
  productType ProductType[]
  productAttrValue ProductAttributeValue[]
}


model ProductType {
  id Int @id @default(autoincrement())
  name String @unique @db.Char(255)
  productAttr ProductAttribute[]
  productInv ProductInventory[]
}

model ProductAttributeValue {
  id Int @id @default(autoincrement())
  productAttrId Int
  productAttribute ProductAttribute @relation(fields: [productAttrId], references: [id])
  attributeValue String @db.Char(255)
  productAttrValues ProductAttributeValues[]
}

model ProductAttributeValues {
  id Int @id @default(autoincrement())
  productAttrValueId Int
  productAttrValue ProductAttributeValue @relation(fields: [productAttrValueId], references: [id])
  productInvId Int
  productInv ProductInventory @relation(fields: [productInvId], references: [id])
}

model ProductInventory {
  id Int @id @default(autoincrement())
  sku String @unique @db.Char(20)
  stock Int 
  productTypeId Int
  productType ProductType @relation(fields: [productTypeId], references: [id], onDelete: Restrict)
  productId Int
  product Product @relation(fields: [productId], references: [id],onDelete: Restrict)
  brandId Int
  brand Brand @relation(fields: [brandId], references: [id], onDelete: SetNull)
  attrValues ProductAttributeValues[]
  media ProductMedia[]
  is_active Boolean @default(false)
  is_default Boolean @default(false)
  retail_price Decimal @db.Decimal(6,2)
  store_price Decimal @db.Decimal(6,2)
  weight Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ProductMedia {
  id Int @id @default(autoincrement())
  sku String
  productInv ProductInventory @relation(fields: [sku], references: [sku])
  imageUrl String 
  altText String @db.Char(255)
  isFeature Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

